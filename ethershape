#!/bin/bash

##
# Traffic shape ETH2 Validator Node.
#
# - geth/prysm ports are limited to combined 3 Mbps in class 1:10
# - FQ_Codel within class 1:10
# - all other traffic into default class 1:20
# - Class 1:10 == high priority but bandwidth limited
# - Class 1:20 == default and full rate (GigE NIC)
##

INTERFACE="eno1"
P1_PORTS=( 12000 13000 30303 )
BANDWIDTH_LIMIT="3mbit"

# Root check
if [ $(id -u) != 0 ]; then
    echo "ERROR: Run as root or sudo."
    exit 1
fi

function start() {

	# Delete Existing
	tc qdisc del dev ${INTERFACE} root
	
	# Init
	tc qdisc replace dev ${INTERFACE} root handle 1: htb default 20
	tc class replace dev ${INTERFACE} parent 1: classid 1:1 htb rate 1Gbit
	
	# Ethereum and Default Classes
	tc class replace dev ${INTERFACE} parent 1:1 classid 1:10 htb rate 3mbit ceil ${BANDWIDTH_LIMIT} prio 1
	tc class replace dev ${INTERFACE} parent 1:1 classid 1:20 htb rate 1Gbit ceil 1Gbit prio 2
	
	##
	# FQ_Codel queuing within each class
	#
	tc qdisc replace dev ${INTERFACE} parent 1:10 fq_codel
	tc qdisc replace dev ${INTERFACE} parent 1:20 fq_codel
	
	##
	# Assign geth/prysm destination and source ports to class 1:10
	#
	for port in "${P1_PORTS[@]}"
	do
	    tc filter replace dev ${INTERFACE} parent 1: prio 1 u32 match ip dport ${port} 0xffff classid 1:10
	    tc filter replace dev ${INTERFACE} parent 1: prio 1 u32 match ip sport ${port} 0xffff classid 1:10
	done
